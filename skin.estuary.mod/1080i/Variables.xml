<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="DurationVar">
		<value condition="Integer.IsLessOrEqual(ListItem.Duration,59)">$INFO[ListItem.Duration,,min]</value>
		<value>$INFO[Window(Home).Property(SkinHelper.ListItemDuration.Hours),,h]$INFO[Window(Home).Property(SkinHelper.ListItemDuration.Minutes)]</value>
	</variable>
	<variable name="RatingStringVar">
		<value condition="String.Contains(ListItem.mpaa,U) + String.Contains(System.Language,French)">Tout public</value>
		<value condition="String.Contains(ListItem.mpaa,10) + String.Contains(System.Language,French)">Interdit au moins de 10 ans</value>
		<value condition="String.Contains(ListItem.mpaa,12) + String.Contains(System.Language,French)">Interdit au moins de 12 ans</value>
		<value condition="String.Contains(ListItem.mpaa,18) + String.Contains(System.Language,French)">Interdit au moins de 18 ans</value>
		<value>$INFO[ListItem.mpaa]</value>
	</variable>
	<variable name="MediaFlagsColorVar">
		<value condition="Skin.HasSetting(enable_mediaflagscolor)">button_focus</value>
		<value>FFFFFFFF</value>
	</variable>
	<variable name="ListItemAudioCodecPlusFilenameFlags">
		<value condition="String.Contains(ListItem.Filenameandpath,atmos)">atmos</value>
		<value condition="String.Contains(ListItem.Filenameandpath,Atmos)">atmos</value>
		<value condition="String.Contains(ListItem.Filenameandpath,ATMOS)">atmos</value>
        	<value condition="String.Contains(ListItem.Filenameandpath,dts-x)">dts-x</value>
        	<value condition="String.Contains(ListItem.Filenameandpath,DTS-X)">dts-x</value>
        	<value condition="String.Contains(ListItem.Filenameandpath,dtsx)">dts-x</value>
        	<value condition="String.Contains(ListItem.Filenameandpath,DTSX)">dts-x</value>
        	<value>$INFO[ListItem.AudioCodec]</value>
     	</variable>
     	<variable name="VideoPlayerAudioCodecPlusFilenameFlags">
     		<value condition="String.Contains(Player.Filenameandpath,atmos)">atmos</value>
     		<value condition="String.Contains(Player.Filenameandpath,Atmos)">atmos</value>
		<value condition="String.Contains(Player.Filenameandpath,ATMOS)">atmos</value>
        	<value condition="String.Contains(Player.Filenameandpath,dts-x)">dts-x</value>
        	<value condition="String.Contains(Player.Filenameandpath,DTS-X)">dts-x</value>
        	<value condition="String.Contains(Player.Filenameandpath,dtsx)">dts-x</value>
        	<value condition="String.Contains(Player.Filenameandpath,DTSX)">dts-x</value>
        	<value>$INFO[VideoPlayer.AudioCodec]</value>
        </variable>
        <variable name="PlayerClearArt">
        	<value condition="!String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
        	<value condition="!String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
        	<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
        	<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
          </variable>
          <variable name="ClearArtTop">
        	<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        	<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
          </variable>
          <variable name="ClearArtView">
        		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        		<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
          </variable>
	<variable name="ClearLogoTop">
        	<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        	<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
    	</variable>
    	<variable name="ClearLogoMusicTop">
		<value condition="!String.IsEmpty(ListItem.AlbumArtist)">$INFO[Skin.String(artworklocation)]$INFO[ListItem.AlbumArtist]/logo.png</value>
		<value>$INFO[Skin.String(artworklocation)]$INFO[ListItem.Artist]/logo.png</value>
	</variable>
	<variable name="EpisodesThumbsVar">
        		<value condition="Skin.HasSetting(show_episodesfanarts)">$VAR[TVShowWidgetImageVar]</value>
        		<value>$INFO[ListItem.Art(thumb)]</value>
          </variable>
	<variable name="TVTimerRadioButtonTexture">
		<value condition="!String.IsEqual(ListItem.Comment,$LOCALIZE[305])">buttons/radio-button-on.png</value>
		<value>buttons/radio-button-off.png</value>
	</variable>
	<variable name="PVRStatusImageVar">
		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
		<value condition="ListItem.HasTimer + !ListItem.IsRecording + !ListItem.HasTimerSchedule">windows/pvr/timer.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.IsRecording">windows/pvr/timer.png</value>
		<value condition="ListItem.HasRecording + !ListItem.IsRecording + !ListItem.HasTimer">windows/pvr/timer.png</value>
	</variable>
	<variable name="SongTitleVar">
		<value condition="ListItem.IsParentFolder">..</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="NowPlayingMainlabelVar">
		<value condition="VideoPlayer.Content(LiveTV)">$INFO[Player.Title]</value>
		<value>$INFO[Player.Time]$INFO[Player.Title, - ]</value>
	</variable>
	<variable name="AutoCompletionContentVar">
		<value condition="!System.HasAddon(plugin.program.autocompletion) | System.HasHiddenInput">-</value>
		<value>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=9</value>
	</variable>
	<variable name="PlaylistLabel2Var">
		<value condition="Window.IsActive(musicplaylist)">$INFO[ListItem.Duration]</value>
		<value>$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
	</variable>
	<variable name="AddonCountLabel">
 		<value condition="Integer.IsGreater(Container(8000).NumItems,10)">&gt;9</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,9)">9</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,8)">8</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,7)">7</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,6)">6</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,5)">5</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,4)">4</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,3)">3</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,2)">2</value>
 		<value condition="Integer.IsGreater(Container(8000).NumItems,1)">1</value>
 		<value>[COLOR grey]0[/COLOR]</value>
 	</variable>
	<variable name="MusicInfoTextboxVar">
		<value condition="Container.Content(songs)">$INFO[ListItem.ContributorAndRole,[B]$LOCALIZE[31128][/B][CR][COLOR=white],[/COLOR]]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Property(Album_Description),[B]$LOCALIZE[183][/B][CR][COLOR=white],[/COLOR]]</value>
		<value>$INFO[ListItem.Property(Artist_Description),[B]$LOCALIZE[21887][/B][CR][COLOR=white],[/COLOR]]</value>
	</variable>
	<variable name="NowPlayingSublabelVar">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Genre, - ]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="GlobalFanartVar">
		<value condition="Skin.HasSetting(use_custom_bg) + !String.IsEmpty(Skin.String(custom_background))">$INFO[Skin.String(custom_background)]</value>
		<value>special://skin/extras/backgrounds/$INFO[Skin.CurrentColourTheme].png</value>
	</variable>
	<variable name="FullScreenInfoTextBoxVar">
		<value condition="Control.HasFocus(5552)">$INFO[VideoPlayer.Duration,$LOCALIZE[180] : [B],[/B][CR]]</value>
		<value condition="Control.HasFocus(5553)">$INFO[VideoPlayer.Tagline,[B],[/B][CR]]$INFO[VideoPlayer.Plot]</value>
		<value condition="Control.HasFocus(5555)">$INFO[VideoPlayer.NextTitle,[B],[/B][CR]]$INFO[VideoPlayer.NextPlot]</value>
		<value>$INFO[VideoPlayer.CastAndRole]</value>
	</variable>
	<variable name="NowPlayingIconVar">
		<value condition="Player.Paused">icons/now-playing/pause.png</value>
		<value>icons/now-playing/play.png</value>
	</variable>
	<variable name="NowPlayingPosterVar">
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="String.IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(livetv)">DefaultTVShowsSquare.png</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="ShiftThumbVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBack.png</value>
		<value condition="String.IsEmpty(Listitem.Thumb) + [Container.Content(albums) | Container.Content(artists)]">DefaultAudio.png</value>
		<value condition="ListItem.IsFolder + String.IsEmpty(ListItem.Thumb)">DefaultFolder.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + [!String.IsEmpty(ListItem.Art(animatedposter)) + Skin.HasSetting(Skin_EnableAnimatedPosters)]">$INFO[ListItem.Art(animatedposter)]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	<variable name="IconWallThumbVar">
		<value condition="Container.Content(studios)">$INFO[ListItem.Label,resource://resource.images.studios.estuarymod/,.png]</value>
		<value condition="String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon,icons/defaulticons/]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	<variable name="ListLabel2Var">
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[556])">$INFO[ListItem.Year]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="ShiftLeftTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Property(description),,[CR]]$INFO[ListItem.PictureDatetime,[COLOR button_focus]$LOCALIZE[552] : [/COLOR],[CR]]$INFO[ListItem.PictureResolution,[COLOR button_focus]$LOCALIZE[169] : [/COLOR],[CR]]$INFO[ListItem.PictureCamMake,[COLOR button_focus]$LOCALIZE[31041] : [/COLOR],[CR]]$INFO[ListItem.PictureCamModel,[COLOR button_focus]$LOCALIZE[21823] : [/COLOR],[CR]]</value>
		<value condition="Container.Content(artists)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Property(Artist_YearsActive),[COLOR button_focus]$LOCALIZE[21898] : [/COLOR],[CR]]$INFO[ListItem.Property(Artist_Style),[COLOR button_focus]$LOCALIZE[736] : [/COLOR],[CR]]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Year,[COLOR button_focus]$LOCALIZE[345] : [/COLOR],[CR]]$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Property(album_label),[COLOR button_focus]$LOCALIZE[21899] : [/COLOR],[CR]]$INFO[ListItem.Property(album_style),[COLOR button_focus]$LOCALIZE[736] : [/COLOR],[CR]]</value>
		<value condition="String.IsEqual(Listitem.DBType,season) | String.IsEqual(Listitem.DBType,tvshow)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Property(NumEpisodes),[COLOR button_focus]$LOCALIZE[20360] : [/COLOR]]$INFO[ListItem.Property(UnWatchedEpisodes), ($LOCALIZE[31064] : ,)]$INFO[Window(Home).Property(NextAired.LatestDate),[CR][COLOR button_focus]$LOCALIZE[40109] : [/COLOR], - ]$INFO[Window(Home).Property(NextAired.LatestNumber),, ]$INFO[Window(Home).Property(NextAired.LatestTitle)]$INFO[Window(Home).Property(NextAired.NextDate),[CR][COLOR button_focus]$LOCALIZE[40108] : [/COLOR], - ]$INFO[Window(Home).Property(NextAired.NextNumber),, ]$INFO[Window(Home).Property(NextAired.NextTitle)]</value>
		<value>$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Director,[COLOR button_focus]$LOCALIZE[20339] : [/COLOR],[CR]]$INFO[ListItem.Writer,[COLOR button_focus]$LOCALIZE[20417] : [/COLOR],[CR]]$VAR[DurationVar,[COLOR button_focus]$LOCALIZE[180] : [/COLOR],[CR]]$INFO[ListItem.Premiered,[COLOR button_focus]$LOCALIZE[20416] : [/COLOR]]</value>
	</variable>
	<variable name="ShiftRightTextBoxVar">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.Size,[COLOR button_focus]$LOCALIZE[289] : [/COLOR],[CR]]$INFO[ListItem.PictureAperture,[COLOR button_focus]$LOCALIZE[21826] : [/COLOR],[CR]]$INFO[ListItem.PictureFocalLen,[COLOR button_focus]$LOCALIZE[21827] : [/COLOR],[CR]]$INFO[ListItem.PictureExpTime,[COLOR button_focus]$LOCALIZE[21830] : [/COLOR],[CR]]$INFO[ListItem.Date,[COLOR button_focus]$LOCALIZE[552] : [/COLOR],[CR]]</value>
		<value condition="Container.Content(artists)">$INFO[ListItem.Property(artist_description)]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Property(album_description)]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="SelectLabel">
		<value condition="Control.IsVisible(3)">[COLOR=button_focus]$INFO[Container(3).NumItems][/COLOR] $LOCALIZE[31036] - $LOCALIZE[31035] [COLOR=button_focus]$INFO[Container(3).CurrentPage][/COLOR]/[COLOR=button_focus]$INFO[Container(3).NumPages][/COLOR]</value>
		<value condition="Control.IsVisible(6)">[COLOR=button_focus]$INFO[Container(6).NumItems][/COLOR] $LOCALIZE[31036] - $LOCALIZE[31035] [COLOR=button_focus]$INFO[Container(6).CurrentPage][/COLOR]/[COLOR=button_focus]$INFO[Container(6).NumPages][/COLOR]</value>
	</variable>
	<variable name="BannerArtVar">
		<value condition="ListItem.IsParentFolder">DefaultBackBanner.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="FanartImageVar">
		<value condition="ListItem.IsParentFolder">special://skin/extras/home-images/movie.jpg</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="MusicInfoListHeaderVar">
		<value condition="Container.Content(albums)">$LOCALIZE[31037]</value>
		<value>$LOCALIZE[21888]</value>
	</variable>
	<variable name="MusicInfoListLabelVar">
		<value condition="Container.Content(artists)">$INFO[ListItem.Label]</value>
		<value>$INFO[ListItem.TrackNumber,[COLOR button_focus], : [/COLOR]]$INFO[ListItem.Label]</value>
	</variable>
	<variable name="ListBoxInfoVar">
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonDescription]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Property(Album_Label),[COLOR button_focus]$LOCALIZE[572] : [/COLOR],[CR]]</value>
		<value condition="Container.Content(mixed) | Container.Content(videos)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Plot]</value>
		<value condition="Container.Content(artists) + !Window.IsActive(musicinformation)">$INFO[ListItem.Property(artist_genre),[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Property(artist_description)]</value>
		<value condition="Container.Content(artists)">$INFO[ListItem.Property(artist_genre),[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Property(artist_mood),[COLOR button_focus]$LOCALIZE[175] : [/COLOR],[CR]]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]$INFO[ListItem.Duration,[COLOR button_focus]$LOCALIZE[180] : [/COLOR],[CR]]$INFO[ListItem.Playcount,[COLOR button_focus]$LOCALIZE[567] : [/COLOR],[CR]]</value>
		<value>$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515] : [/COLOR],[CR]]</value>
	</variable>
	<variable name="TVShowWidgetImageVar">
		<value condition="ListItem.IsParentFolder">DefaultBackFanart.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="TVShowWidgetImageVar2">
		<value condition="ListItem.IsParentFolder">DefaultBackFanart.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster)) + [String.IsEqual(Container(9000).ListItem.Property(WidgetStyle.1),$LOCALIZE[40020]) | String.IsEqual(Container(9000).ListItem.Property(WidgetStyle.2),$LOCALIZE[40020]) | String.IsEqual(Container(9000).ListItem.Property(WidgetStyle.3),$LOCALIZE[40020]) | String.IsEqual(Container(9000).ListItem.Property(WidgetStyle.4),$LOCALIZE[40020])]">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ListInfoBoxImageVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBack.png</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="AddonsLabel2Var">
		<value condition="ListItem.Property(addon.downloading)">$INFO[ListItem.Property(addon.status)]</value>
		<value condition="!String.IsEqual(Container.SortMethod,$LOCALIZE[551])">$INFO[ListItem.Label2]</value>
		<value>$INFO[ListItem.AddonCreator,, - ]$INFO[ListItem.AddonVersion]</value>
	</variable>
	<variable name="AddonsListIconVar">
		<value condition="!String.IsEmpty(ListItem.AddonBroken)">icons/addonstatus/disable.png</value>
		<value condition="ListItem.IsParentFolder">-</value>
		<value condition="ListItem.Property(addon.orphaned)">icons/addonstatus/orphan.png</value>
		<value condition="ListItem.Property(addon.downloading)">icons/addonstatus/install.png</value>
 		<value condition="ListItem.Property(addon.isinstalled) + !ListItem.Property(addon.isenabled) + Window.IsActive(addonbrowser)">icons/addonstatus/disable.png</value>
 		<value condition="ListItem.Property(addon.hasupdate)">icons/addonstatus/update.png</value>
		<value condition="ListItem.Property(addon.isinstalled)">OverlayWatched.png</value>
		<value>OverlayUnwatched.png</value>
	</variable>
	<variable name="AudioDSPIconVar">
		<value condition="!String.IsEmpty(ADSP.MasterOverrideIcon)">$INFO[ADSP.MasterOverrideIcon]</value>
		<value condition="Player.HasVideo">$VAR[VideoPlayerAudioCodecPlusFilenameFlags,flags/audiocodec/,.png]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Codec,flags/audiocodec/,.png]</value>
	</variable>
	<variable name="ResolutionFlagVar">
		<value condition="ListItem.IsStereoscopic">flags/videoresolution/3D.png</value>
		<value condition="String.Contains(ListItem.Filenameandpath,3D)">flags/videoresolution/3D.png</value>
		<value condition="String.Contains(ListItem.Filenameandpath,3d)">flags/videoresolution/3D.png</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,1080)">flags/videoresolution/4K.png</value>
		<value>$INFO[ListItem.VideoResolution,flags/videoresolution/,.png]</value>
	</variable>
	<variable name="ResolutionFlagVarPlayer">
		<value condition="VideoPlayer.IsStereoscopic">flags/videoresolution/3D.png</value>
		<value condition="String.Contains(VideoPlayer.Filenameandpath,3D)">flags/videoresolution/3D.png</value>
		<value condition="Integer.IsGreater(VideoPlayer.VideoResolution,1080)">flags/videoresolution/4K.png</value>
		<value>$INFO[VideoPlayer.VideoResolution,flags/videoresolution/,.png]</value>
	</variable>
	<variable name="BannerVar">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Art(tvshow.banner)]</value>
	</variable>
	<variable name="PosterVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBack.png</value>
		<value condition="!String.IsEmpty(Container.Art(season.poster)) + Container.Content(episodes)">$INFO[Container.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.poster)) + Container.Content(episodes)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.poster)) + Container.Content(seasons) + Window.IsActive(movieinformation)">$INFO[Container.Art(tvshow.poster)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">$INFO[Container.ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster)) + !Container.Content(seasons)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + [!String.IsEmpty(ListItem.Art(animatedposter)) + Skin.HasSetting(Skin_EnableAnimatedPosters)]">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Art(poster))">$INFO[Container(999).ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Container(999).ListItem.Art(tvshow.poster))">$INFO[Container(999).ListItem.Art(tvshow.poster)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="ListPosterVar">
		<value condition="ListItem.IsParentFolder">DefaultFolderBack.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + [!String.IsEmpty(ListItem.Art(animatedposter)) + Skin.HasSetting(Skin_EnableAnimatedPosters)]">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="BannerLabel2Var">
		<value condition="String.IsEqual(Listitem.DBType,tvshow)">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ,]</value>
		<!-- <value>$INFO[ListItem.Year]</value>
		 -->
	</variable>
	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="[Player.Paused + !Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">$LOCALIZE[112]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">$LOCALIZE[773][COLOR=button_focus] $INFO[Player.SeekStepSize][/COLOR]</value>
		<value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">$LOCALIZE[773][COLOR=button_focus] $INFO[Player.SeekOffset][/COLOR]</value>
		<value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[773]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31039] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31038] $VAR[VideoPlayerForwardRewindVar]</value>
	</variable>
	<variable name="SeekTimeLabelVar">
		<value condition="Player.Seeking">$INFO[Player.SeekTime]$INFO[Player.Duration, / ]</value>
		<value>$INFO[Player.Time]$INFO[Player.Duration, / ]</value>
	</variable>
	<variable name="VideoOSDHelpTextVar">
		<value condition="Control.HasFocus(87) + [Player.Rewinding | Player.Forwarding]">$LOCALIZE[31050]</value>
		<value condition="Control.HasFocus(70011)">$LOCALIZE[20060]</value>
		<value condition="Control.HasFocus(70012) | Control.HasFocus(70013)">$LOCALIZE[31034]</value>
		<value condition="Control.HasFocus(700)">$LOCALIZE[298]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[31106]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[24012]</value>
		<value condition="Control.HasFocus(804)">$LOCALIZE[31092]</value>
		<value condition="Control.HasFocus(70040)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(70041)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(70043)">$LOCALIZE[5]</value>
		<value condition="Control.HasFocus(255)">$LOCALIZE[36501]</value>
		<value condition="Control.HasFocus(606)">$LOCALIZE[264]</value>
		<value condition="ControlGroup(6000).HasFocus + Player.SeekEnabled">$LOCALIZE[31054]</value>
	</variable>
	<variable name="MusicOSDHelpTextVar">
		<value condition="Control.HasFocus(620)">$LOCALIZE[31033]$INFO[MusicPlayer.UserRating, : ]</value>
		<value condition="Control.HasFocus(621)">$LOCALIZE[559]</value>
		<value condition="Control.HasFocus(704)">$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</value>
		<value condition="Control.HasFocus(607)">$LOCALIZE[191]$INFO[Playlist.Random, : ]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[24013]</value>
		<value condition="Control.HasFocus(5000)">$LOCALIZE[10004]</value>
	</variable>
	<variable name="SkinSettingsHelpTextVar">
		<value condition="Control.HasFocus(611)">$LOCALIZE[40119]</value>
 		<value condition="Control.HasFocus(612)">$LOCALIZE[40120]</value>
 		<value condition="Control.HasFocus(613)">$LOCALIZE[40121]</value>
 		<value condition="Control.HasFocus(653)">$LOCALIZE[40122]</value>
 		<value condition="Control.HasFocus(601)">$LOCALIZE[40123]</value>
 		<value condition="Control.HasFocus(602)">$LOCALIZE[40124]</value>
 		<value condition="Control.HasFocus(603)">$LOCALIZE[40125]</value>
 		<value condition="Control.HasFocus(604)">$LOCALIZE[40127]</value>
 		<value condition="Control.HasFocus(646)">$LOCALIZE[40128]</value>
 		<value condition="Control.HasFocus(647)">$LOCALIZE[40129]</value>
 		<value condition="Control.HasFocus(609)">$LOCALIZE[40130]</value>
 		<value condition="Control.HasFocus(614)">$LOCALIZE[40131]</value>
 		<value condition="Control.HasFocus(615)">$LOCALIZE[40132]</value>
 		<value condition="Control.HasFocus(643)">$LOCALIZE[40133]</value>
 		<value condition="Control.HasFocus(644)">$LOCALIZE[40134]</value>
 		<value condition="Control.HasFocus(649)">$LOCALIZE[40135]</value>
 		<value condition="Control.HasFocus(605)">$LOCALIZE[40136]</value>
 		<value condition="Control.HasFocus(655)">$LOCALIZE[40137]</value>
 		<value condition="Control.HasFocus(663)">$LOCALIZE[40138]</value>
 		<value condition="Control.HasFocus(606)">$LOCALIZE[40139]</value>
 		<value condition="Control.HasFocus(607)">$LOCALIZE[40140]</value>
 		<value condition="Control.HasFocus(648)">$LOCALIZE[40141]</value>
 		<value condition="Control.HasFocus(652)">$LOCALIZE[40142]</value>
 		<value condition="Control.HasFocus(616)">$LOCALIZE[40143]</value>
 		<value condition="Control.HasFocus(619)">$LOCALIZE[40144]</value>
 		<value condition="Control.HasFocus(617)">$LOCALIZE[40145]</value>
 		<value condition="Control.HasFocus(618)">$LOCALIZE[40146]</value>
 		<value condition="Control.HasFocus(622)">$LOCALIZE[40147]</value>
 		<value condition="Control.HasFocus(628)">$LOCALIZE[40148]</value>
 		<value condition="Control.HasFocus(656)">$LOCALIZE[40149]</value>
 		<value condition="Control.HasFocus(642)">$LOCALIZE[40150]</value>
 		<value condition="Control.HasFocus(651)">$LOCALIZE[40151]</value>
 		<value condition="Control.HasFocus(623)">$LOCALIZE[40152]</value>
 		<value condition="Control.HasFocus(624)">$LOCALIZE[40153]</value>		
 		<value condition="Control.HasFocus(645)">$LOCALIZE[40154]</value>
 		<value condition="Control.HasFocus(654)">$LOCALIZE[40155]</value>
 		<value condition="Control.HasFocus(621)">$LOCALIZE[40156]</value>
 		<value condition="Control.HasFocus(625)">$LOCALIZE[40157]</value>
 		<value condition="Control.HasFocus(626)">$LOCALIZE[40158]</value>
 		<value condition="Control.HasFocus(664)">$LOCALIZE[40160]</value>		
 		<value condition="Control.HasFocus(657) | Control.HasFocus(658) | Control.HasFocus(659) | Control.HasFocus(661) | Control.HasFocus(662)">$LOCALIZE[10045]</value>
 		<value condition="Container(9000).HasFocus(1)">$LOCALIZE[40024]</value>
 		<value condition="Container(9000).HasFocus(2)">$LOCALIZE[31130]</value>	
 		<value condition="Container(9000).HasFocus(3)">$LOCALIZE[40026]</value>
 		<value condition="Container(9000).HasFocus(4)">$LOCALIZE[40025]</value>
 		<value condition="Container(9000).HasFocus(5)">$LOCALIZE[40034]</value>
 		<value condition="Container(9000).HasFocus(6)">$LOCALIZE[40043]</value>
 		<value condition="Container(9000).HasFocus(7)">$LOCALIZE[40046]</value>
 		<value condition="Container(9000).HasFocus(8)">$LOCALIZE[40048]</value>
 		<value condition="Control.HasFocus(211) | [Control.HasFocus(60) | ControlGroup(90001).HasFocus]">$LOCALIZE[31130]</value>
 	</variable>
	<variable name="DSPManagerHelpTextVar">
		<value condition="Control.HasFocus(20)">$INFO[Container(20).ListItem.Property(Description)]</value>
		<value condition="Control.HasFocus(21)">$INFO[Container(21).ListItem.Property(Description)]</value>
		<value>$INFO[Container(9000).ListItem.Label2]</value>
	</variable>
	<variable name="VolumeLabelVar">
		<value condition="Integer.IsEqual(Control.GetLabel(20),1)">1</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),2)">2</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),3)">3</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),4)">4</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),5)">5</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),6)">6</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),7)">7</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),8)">8</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),9)">9</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),10)">10</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),11)">11</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),12)">12</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),13)">13</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),14)">14</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),15)">15</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),16)">16</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),17)">17</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),18)">18</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),19)">19</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),20)">20</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),21)">21</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),22)">22</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),23)">23</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),24)">24</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),25)">25</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),26)">26</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),27)">27</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),28)">28</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),29)">29</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),30)">30</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),31)">31</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),32)">32</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),33)">33</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),34)">34</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),35)">35</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),36)">36</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),37)">37</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),38)">38</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),39)">39</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),40)">40</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),41)">41</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),42)">42</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),43)">43</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),44)">44</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),45)">45</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),46)">46</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),47)">47</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),48)">48</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),49)">49</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),50)">50</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),51)">51</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),52)">52</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),53)">53</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),54)">54</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),55)">55</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),56)">56</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),57)">57</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),58)">58</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),59)">59</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),60)">60</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),61)">61</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),62)">62</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),63)">63</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),64)">64</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),65)">65</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),66)">66</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),67)">67</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),68)">68</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),69)">69</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),70)">70</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),71)">71</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),72)">72</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),73)">73</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),74)">74</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),75)">75</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),76)">76</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),77)">77</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),78)">78</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),79)">79</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),80)">80</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),81)">81</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),82)">82</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),83)">83</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),84)">84</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),85)">85</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),86)">86</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),87)">87</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),88)">88</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),89)">89</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),90)">90</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),91)">91</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),92)">92</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),93)">93</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),94)">94</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),95)">95</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),96)">96</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),97)">97</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),98)">98</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),99)">99</value>
		<value condition="Integer.IsEqual(Control.GetLabel(20),100)">100</value>
	</variable>
	<variable name="ListSubLabelVar">
		<value condition="ListItem.IsCollection">$INFO[Container(5000).NumItems]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	<variable name="VideoInfoMainLabelVar">
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]$INFO[ListItem.Year, ([COLOR button_focus],[/COLOR])]</value>
 		<value>$INFO[ListItem.Label]$INFO[ListItem.Year, ([COLOR button_focus],[/COLOR])]</value>
	</variable>
	<variable name="VideoInfoSubLabelVar">
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season]$INFO[ListItem.Episode,[COLOR button_focus]x[/COLOR], : ]$INFO[ListItem.TVShowTitle]</value>
 		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Tagline]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	<variable name="OSDSubLabelVar">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Season,[COLOR button_focus]S,[/COLOR]]$INFO[VideoPlayer.Episode,[COLOR button_focus]E, : [/COLOR]]$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Genre]</value>
	</variable>
	<variable name="AddonsFanartVar">
 		<value condition="Skin.HasSetting(no_fanart)">$VAR[GlobalFanartVar]</value>
 		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
 		<value condition="!String.IsEmpty(Container(500).ListItem.Art(fanart)) + Control.HasFocus(500)">$INFO[Container(500).ListItem.Art(fanart)]</value>
 		<value condition="!String.IsEmpty(Container(501).ListItem.Art(fanart)) + Control.HasFocus(501)">$INFO[Container(501).ListItem.Art(fanart)]</value>
 		<value condition="!String.IsEmpty(Container(502).ListItem.Art(fanart)) + Control.HasFocus(502)">$INFO[Container(502).ListItem.Art(fanart)]</value>
 		<value condition="!String.IsEmpty(Container(503).ListItem.Art(fanart)) + Control.HasFocus(503)">$INFO[Container(503).ListItem.Art(fanart)]</value>
 		<value condition="!String.IsEmpty(Container(504).ListItem.Art(fanart)) + Control.HasFocus(504)">$INFO[Container(504).ListItem.Art(fanart)]</value>
 		<value condition="!String.IsEmpty(Container(505).ListItem.Art(fanart)) + Control.HasFocus(505)">$INFO[Container(505).ListItem.Art(fanart)]</value>
 		<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>
 		<value>-</value>
 	</variable>
	<variable name="HomeFanartVar">
		<value condition="Skin.HasSetting(no_fanart)">$VAR[GlobalFanartVar]</value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(infobackground))">$INFO[Window(home).Property(infobackground)]</value>
		<!--<value condition="!String.IsEmpty(Container(5100).ListItem.Art(fanart)) + Control.HasFocus(5100)">$INFO[Container(5100).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(5200).ListItem.Art(fanart)) + Control.HasFocus(5200)">$INFO[Container(5200).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(5300).ListItem.Art(fanart)) + Control.HasFocus(5300)">$INFO[Container(5300).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(5400).ListItem.Art(fanart)) + Control.HasFocus(5400)">$INFO[Container(5400).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(6100).ListItem.Art(fanart)) + Control.HasFocus(6100)">$INFO[Container(6100).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(6200).ListItem.Art(fanart)) + Control.HasFocus(6200)">$INFO[Container(6200).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(6300).ListItem.Art(fanart)) + Control.HasFocus(6300)">$INFO[Container(6300).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(6400).ListItem.Art(fanart)) + Control.HasFocus(6400)">$INFO[Container(6400).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(7100).ListItem.Art(fanart)) + Control.HasFocus(7100)">$INFO[Container(7100).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(7200).ListItem.Art(fanart)) + Control.HasFocus(7200)">$INFO[Container(7200).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(7300).ListItem.Art(fanart)) + Control.HasFocus(7300)">$INFO[Container(7300).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(7400).ListItem.Art(fanart)) + Control.HasFocus(7400)">$INFO[Container(7400).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8100).ListItem.Art(fanart)) + Control.HasFocus(8100)">$INFO[Container(8100).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8200).ListItem.Art(fanart)) + Control.HasFocus(8200)">$INFO[Container(8200).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8300).ListItem.Art(fanart)) + Control.HasFocus(8300)">$INFO[Container(8300).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8400).ListItem.Art(fanart)) + Control.HasFocus(8400)">$INFO[Container(8400).ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container(8500).ListItem.Art(fanart)) + Control.HasFocus(8500)">$INFO[Container(8500).ListItem.Art(fanart)]</value>-->
		<value condition="!String.IsEmpty(Skin.String(WeatherFanart.path)) + !String.IsEmpty(Container(15100).ListItem.Property(FanartCode)) + Control.HasFocus(15100)">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container(15100).ListItem.Property(FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(WeatherFanart.path)) + !String.IsEmpty(Container(15200).ListItem.Property(FanartCode)) + Control.HasFocus(15200)">$INFO[Skin.String(WeatherFanart.path)]$INFO[Container(15200).ListItem.Property(FanartCode)]</value>
		<!--<value condition="!String.IsEmpty(Skin.String(HomeFanart.path))">$INFO[Skin.String(HomeFanart.path)]$INFO[Container(9000).ListItem.Property(id)]$INFO[Skin.String(HomeFanart.ext)]</value>-->
		<value condition="String.IsEmpty(Skin.String(WeatherFanart.path)) + Control.HasFocus(15100)">special://skin/extras/home-images/weather.jpg</value>
		<value condition="String.IsEmpty(Skin.String(WeatherFanart.path)) + Control.HasFocus(15200)">special://skin/extras/home-images/weather.jpg</value>
		<value condition="Control.HasFocus(803)">special://skin/extras/home-images/favorites.jpg</value>
		<value condition="Control.HasFocus(802)">special://skin/extras/home-images/settings.jpg</value>
		<value condition="Control.HasFocus(801)">special://skin/extras/home-images/filemanager.jpg</value>
		<value condition="Control.HasFocus(804)">special://skin/extras/home-images/power.jpg</value>
		<value condition="Control.HasFocus(900)">special://skin/extras/home-images/search.jpg</value>
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(background))">$INFO[Container(9000).ListItem.Property(background)]</value>
		<value>-</value>
	</variable>
	<variable name="MediaFanartVar">
		<value condition="Skin.HasSetting(no_fanart)">$VAR[GlobalFanartVar]</value>
		<value condition="Window.IsActive(musicinformation) | Window.IsActive(movieinformation) | Window.IsActive(addoninformation) | Window.IsActive(pvrguideinfo) | Window.IsActive(pvrrecordinginfo) | Window.IsActive(pictureinfo) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(infobackground))">$INFO[Window(home).Property(infobackground)]</value>
		<value condition="Window.IsActive(pictures) + IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.FolderPath]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
		<value>$INFO[ListItem.Art(fanart)]</value>
	</variable>
	<variable name="WeatherFanartVar">
		<value condition="!String.IsEmpty(Window(weather).Property(current.fanartcode)) + Skin.HasSetting(WeatherFanart.multi)">$INFO[Skin.String(WeatherFanart.path)]$INFO[Window(weather).Property(current.fanartcode)]</value>
		<value>$INFO[Skin.String(WeatherFanart.path)]$INFO[Window(weather).Property(fanartcode)]$INFO[Skin.String(WeatherFanart.ext)]</value>
	</variable>
	<variable name="ListWatchedIconVar">
		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
		<value condition="ListItem.IsParentFolder">-</value>
		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
		<value condition="!String.IsEmpty(ListItem.Overlay)">$INFO[ListItem.Overlay]</value>
		<value condition="ListItem.IsFolder + Container.Content(files)">overlays/folder.png</value>
		<value>OverlayUnwatched.png</value>
	</variable>
	<variable name="SettingsSectionIcon">
		<value condition="Window.IsActive(PlayerSettings)">icons/settings/player.png</value>
		<value condition="Window.IsActive(programssettings)">icons/settings/programs.png</value>
		<value condition="Window.IsActive(InterfaceSettings)">icons/settings/appearance.png</value>
		<value condition="Window.IsActive(LibrarySettings)">icons/settings/library.png</value>
		<value condition="Window.IsActive(systemsettings)">icons/settings/system.png</value>
		<value condition="Window.IsActive(servicesettings)">icons/settings/network.png</value>
		<value condition="Window.IsActive(pvrsettings)">icons/settings/livetv.png</value>
	</variable>
	<!-- Breadcrumbs -->
	<variable name="BreadcrumbsVideoVar">
		<value condition="Container.Content(movies) | String.StartsWith(container.folderpath,library://video/movies/) | String.StartsWith(container.folderpath,videodb://movies)">$LOCALIZE[20342]</value>
 		<value condition="Container.Content(musicvideos) | String.StartsWith(container.folderpath,library://video/musicvideos/) | String.StartsWith(container.folderpath,videodb://musicvideos)">$LOCALIZE[20389]</value>
 		<value condition="Container.Content(tvshows) | String.StartsWith(container.folderpath,library://video/tvshows/) | String.StartsWith(container.folderpath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(episodes)">$LOCALIZE[20343]</value>
		<value>$LOCALIZE[3]</value>
	</variable>
	<variable name="BreadcrumbsPVRTimerVar">
		<value condition="Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules)">$LOCALIZE[19138]</value>
		<value>$LOCALIZE[19040]</value>
	</variable>
	<variable name="RepeatButtonColordiffuseVar">
		<value condition="Control.HasFocus(704)">button_focus</value>
		<value>FFFFFFFF</value>
	</variable>
	<variable name="BottomBarPageLabel">
		<value condition="Control.HasFocus(600) | Control.HasFocus(50600) | Control.HasFocus(502600) | Control.HasFocus(5199) | Control.HasFocus(531) | Control.HasFocus(533)">[COLOR button_focus]$INFO[Container.CurrentPage,, / ]$INFO[Container.NumPages][/COLOR]</value>
		<value>$INFO[Container.CurrentItem,, / ]$INFO[Container.NumItems]</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="PVRAreaVar">
		<value condition="Control.HasFocus(100)">$LOCALIZE[19019]</value>
		<value condition="Control.HasFocus(101)">$LOCALIZE[19069]</value>
		<value condition="Control.HasFocus(102)">$LOCALIZE[19017]</value>
		<value condition="Control.HasFocus(103)">$LOCALIZE[19040]</value>
		<value condition="Control.HasFocus(104)">$LOCALIZE[19138]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[137]</value>
	</variable>
	<variable name="PlayerControlsRepeatImageVar">
		<value condition="Playlist.IsRepeatOne">osd/fullscreen/buttons/repeat-one.png</value>
		<value condition="Playlist.IsRepeat">osd/fullscreen/buttons/repeat-all.png</value>
		<value>osd/fullscreen/buttons/repeat-off.png</value>
	</variable>
	<variable name="PlayerLabel1">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="PlayerLabel2">
		<value condition="VideoPlayer.Content(episodes)">$LOCALIZE[20373]$INFO[VideoPlayer.Season, : , / ]$LOCALIZE[20359]$INFO[VideoPlayer.Episode, : ]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Year]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasAudio">[COLOR grey]$INFO[MusicPlayer.Album][/COLOR]$INFO[MusicPlayer.Year, [,] ]</value>
	</variable>
	<variable name="PlayerLabel3">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="VideoPlayer.Content(movies) | VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Genre]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.TrackNumber,, : ][COLOR=grey]$INFO[Player.Title][/COLOR]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">icons/pvr/PVR-IsRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/PVR-HasTimer.png</value>
	</variable>
	
	<variable name="Label_WidgetStyle1">
                 <value condition="[String.IsEmpty(Container(211).ListItem.Property(WidgetStyle.1)) | String.Contains(Container(211).ListItem.Property(WidgetStyle.1),$LOCALIZE[40020])]">$LOCALIZE[40020]</value>
                 <value>$INFO[Container(211).ListItem.Property(WidgetStyle.1)]</value>
        </variable>
        
        <variable name="Label_WidgetStyle2">
                 <value condition="[String.IsEmpty(Container(211).ListItem.Property(WidgetStyle.2)) | String.Contains(Container(211).ListItem.Property(WidgetStyle.2),$LOCALIZE[40020])]">$LOCALIZE[40020]</value>
                 <value>$INFO[Container(211).ListItem.Property(WidgetStyle.2)]</value>
        </variable>
        
        <variable name="Label_WidgetStyle3">
                 <value condition="[String.IsEmpty(Container(211).ListItem.Property(WidgetStyle.3)) | String.Contains(Container(211).ListItem.Property(WidgetStyle.3),$LOCALIZE[40020])]">$LOCALIZE[40020]</value>
                 <value>$INFO[Container(211).ListItem.Property(WidgetStyle.3)]</value>
        </variable>
        
        <variable name="Label_WidgetStyle4">
                 <value condition="[String.IsEmpty(Container(211).ListItem.Property(WidgetStyle.4)) | String.Contains(Container(211).ListItem.Property(WidgetStyle.4),$LOCALIZE[40020])]">$LOCALIZE[40020]</value>
                 <value>$INFO[Container(211).ListItem.Property(WidgetStyle.4)]</value>
        </variable>
        	<variable name="Label_SkinSetting_Startup">
        	<value condition="!String.IsEmpty(Skin.String(SplashScreen))">$INFO[Skin.String(SplashScreen)]</value>
        	<value condition="String.IsEmpty(Skin.String(SplashScreen))">$LOCALIZE[40037]</value>
    	</variable>
    	<variable name="Label_SkinSetting_StudioLogos">
        	<value condition="!String.IsEmpty(Skin.String(studiologos.name))">$INFO[Skin.String(studiologos.name)]</value>
        	<value>$LOCALIZE[40037]</value>
    </variable>
    <variable name="Label_SkinSetting_RecordLabels">
        	<value condition="!String.IsEmpty(Skin.String(recordlabels.name))">$INFO[Skin.String(recordlabels.name)]</value>
        	<value>$LOCALIZE[40037]</value>
    </variable>
    <variable name="Label_SkinSetting_WeatherIcons">
        	<value condition="!String.IsEmpty(Skin.String(WeatherIcons.name))">$INFO[Skin.String(WeatherIcons.name)]</value>
        	<value>$LOCALIZE[15109]</value>
    </variable>
    <variable name="Label_SkinSetting_Backgrounds">
        	<value condition="!String.IsEmpty(Container(211).ListItem.Property(background))">$INFO[Container(211).ListItem.Property(background)]</value>
        	<value>$LOCALIZE[40037]</value>
    </variable>
    <variable name="Label_SkinSetting_WeatherFanart">
        	<value condition="!String.IsEmpty(Skin.String(WeatherFanart.name))">$INFO[Skin.String(WeatherFanart.name)]</value>
        	<value>$LOCALIZE[15109]</value>
    </variable>
    <variable name="Label_SkinSetting_Opacity">
        	<value condition="!String.IsEmpty(Skin.String(Opacity.label))">$INFO[Skin.String(Opacity.label)] %</value>
        	<value>$LOCALIZE[15109] - 21 %</value>
    </variable>
    <variable name="Label_SkinSetting_HideBars">
        	<value condition="!String.IsEmpty(Skin.String(HideBars.label))">$INFO[Skin.String(HideBars.label)]</value>
        	<value>$LOCALIZE[40068]</value>
    </variable>
    <variable name="Label_SkinSetting_Spinner">
    		<value condition="Skin.String(SkinHelper.SpinnerTexturePath,None)">$LOCALIZE[15109]</value>
        	<value condition="!String.IsEmpty(Skin.String(SkinHelper.SpinnerTexturePath)) | !String.IsEmpty(Skin.String(SkinHelper.SpinnerTexture))">$INFO[Skin.String(SkinHelper.SpinnerTexture)]</value>       	
        	<value>$LOCALIZE[15109]</value>
    </variable>
    <variable name="Label_SkinSetting_ClearArtPosition">
    		<value condition="!String.IsEmpty(Skin.String(clearart_position))">$INFO[Skin.String(clearart_position)]</value>      	
        	<value>$LOCALIZE[40088]</value>
    </variable>
    <variable name="Background_Opacity">
        <value condition="String.IsEmpty(Skin.String(Opacity.label)) + String.IsEqual(Skin.String(Opacity.label),Default)">35FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),0)">00FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),5)">0DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),10)">1AFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),15)">26FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),20)">33FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),25)">40FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),30)">4DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),35)">59FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),40)">66FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),45)">73FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),50)">80FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),55)">8CFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),60)">99FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),65)">A6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),70)">B3FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),75)">BFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),80)">CCFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),85)">D9FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),90)">E6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),95)">F2FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(Opacity.label),100)">FFFFFFFF</value>
        <value>35FFFFFF</value>
    </variable> 
</includes>
