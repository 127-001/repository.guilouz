<?xml version="1.0" encoding="utf-8"?>
<window type="dialog" id="1138">
	<visible>[Skin.HasSetting(enable_infowithpause) + Player.Paused + Window.IsActive(fullscreenvideo) + !Window.IsActive(fullscreeninfo)] | [Skin.HasSetting(enable_alwaysinfo) + Window.IsActive(seekbar) + Window.IsActive(fullscreenvideo) + !Window.IsActive(fullscreeninfo)] | [!Skin.HasSetting(enable_infowithpause) + !Skin.HasSetting(enable_alwaysinfo) + !Skin.HasSetting(enable_neverinfo) + Window.IsActive(seekbar) + Window.IsActive(fullscreenvideo) + !Window.IsActive(fullscreeninfo)]</visible>
	<visible>!Window.IsVisible(1122) + !Window.IsVisible(1139) + !Window.IsVisible(VideoOSDBookmarks.xml) + !Window.IsVisible(DialogPVRChannelsOSD.xml) + !Window.IsVisible(DialogPVRChannelGuide.xml)</visible>
	<controls>
		<control type="button">
			<description>background close area</description>
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<bottom>280</bottom>
			<texturefocus />
			<texturenofocus />
			<onclick>Action(close)</onclick>
		</control>
		<control type="group">
			<visible>!Window.IsVisible(playerprocessinfo) + VideoPlayer.Content(LiveTV)</visible>
			<include>Animation_DialogPopupOpenClose</include>
			<bottom>60</bottom>
			<height>380</height>
			<control type="image">
				<left>0</left>
				<width>100%</width>
				<height>240</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
			</control>
			<control type="image">
				<left>30</left>
				<top>20</top>
				<width>200</width>
				<height>200</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>$INFO[Player.Art(thumb)]</texture>
			</control>
			<control type="label">
				<right>20</right>
				<width>800</width>
				<top>195</top>
				<height>25</height>
				<label>$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031] : [COLOR white], - ][COLOR white]$INFO[VideoPlayer.NextStartTime]$INFO[VideoPlayer.NextEndTime : ][/COLOR]</label>
				<align>right</align>
				<aligny>center</aligny>
				<visible>VideoPlayer.HasEpg</visible>
				<textcolor>$VAR[SkinColorVar]</textcolor>
			</control>
			<control type="textbox">
				<left>260</left>
				<top>20</top>
				<right>50</right>
				<height>165</height>
				<label fallback="416">$INFO[VideoPlayer.Plot]</label>
				<align>justify</align>
				<autoscroll delay="8000" repeat="7500" time="5000"></autoscroll>
			</control>
		</control>
		<control type="group">
			<visible>!Window.IsVisible(playerprocessinfo) + VideoPlayer.Content(LiveTV)</visible>
			<animation effect="fade" time="400">VisibleChange</animation>
			<bottom>60</bottom>
			<height>380</height>
			<control type="grouplist">
				<right>20</right>
				<top>365</top>
				<width>1000</width>
				<height>100</height>
				<align>right</align>
				<include>Animation_BottomSlide</include>
				<orientation>horizontal</orientation>
				<itemgap>5</itemgap>
				<visible>![Player.ChannelPreviewActive | Window.IsActive(videoosd)]</visible>
				<animation effect="fade" start="0" end="100" time="200" delay="1000">Visible</animation>
				<include content="MediaFlagOSD">
					<param name="texture" value="$VAR[VideoPlayerResolutionFlagVar]" />
					<param name="fallback" value="flags/videoresolution/fallback.png" />
					<param name="width" value="73" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.VideoCodec,flags/videocodec/,.png]" />
					<param name="fallback" value="flags/videocodec/fallback.png" />
					<param name="visible" value="!String.IsEmpty(VideoPlayer.VideoCodec)" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]" />
					<param name="fallback" value="flags/aspectratio/fallback.png" />
					<param name="visible" value="!String.IsEmpty(VideoPlayer.VideoAspect)" />
					<param name="width" value="108" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.AudioCodec,flags/audiocodec/,.png]" />
					<param name="fallback" value="flags/audiocodec/fallback.png" />
					<param name="visible" value="!String.IsEmpty(VideoPlayer.AudioCodec)" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.AudioChannels,flags/audiochannel/,.png]" />
					<param name="fallback" value="flags/audiochannel/fallback.png" />
					<param name="visible" value="!String.IsEmpty(VideoPlayer.AudioChannels)" />
				</include>
			</control>
		</control>
		<control type="group">
			<bottom>20</bottom>
			<height>230</height>
			<visible>!Window.IsVisible(playerprocessinfo) + !VideoPlayer.Content(LiveTV)</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<control type="group">
				<visible>!VideoPlayer.HasMenu</visible>
				<control type="image">
					<left>50</left>
					<top>-660</top>
					<width>360</width>
					<height>360</height>
					<aligny>top</aligny>
					<aspectratio align="left">keep</aspectratio>
					<fadetime>300</fadetime>
					<animation type="WindowOpen">
						<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out" />
						<effect type="slide" start="-320" end="0" time="400" tween="cubic" easing="out" />
					</animation>
					<animation type="WindowClose">
						<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
						<effect type="slide" start="0" end="-320" time="300" tween="cubic" easing="out" />
					</animation>
					<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="Player.Playing">Conditional</animation>
					<texture background="true">$INFO[Player.Art(discart)]</texture>
					<visible>!Skin.HasSetting(show_discart)</visible>
					<include>OpenClose_Left</include>
				</control>
				<control type="image">
					<depth>DepthOSD+</depth>
					<left>10</left>
					<top>-500</top>
					<width>440</width>
					<height>610</height>
					<aspectratio aligny="bottom">stretch</aspectratio>
					<texture background="true">$VAR[NowPlayingPosterVar]</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<include>OpenClose_Left</include>
					<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)</visible>
				</control>
				<control type="group">
					<left>205</left>
					<top>69</top>
					<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating)">VideoPlayerRatingCircle</include>
					<include>OpenClose_Left</include>
					<visible>!String.StartsWith(Player.FolderPath,http) + !VideoPlayer.HasMenu</visible>
				</control>
				<control type="image">
					<depth>DepthOSD+</depth>
					<left>10</left>
					<top>-500</top>
					<width>440</width>
					<height>610</height>
					<aspectratio aligny="bottom">keep</aspectratio>
					<texture background="true">$VAR[NowPlayingPosterVar]</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<include>OpenClose_Left</include>
					<visible>!VideoPlayer.HasMenu + !VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes)</visible>
				</control>
				<control type="group">
					<include>OpenClose_Right</include>
					<visible>!VideoPlayer.HasMenu</visible>
					<control type="image">
						<right>30</right>
						<bottom>450</bottom>
						<width>500</width>
						<height>281</height>
						<texture background="true">$VAR[PlayerInfoClearArtVar]</texture>
						<aspectratio align="center" aligny="bottom">keep</aspectratio>
						<visible>!Skin.HasSetting(enable_playerclearart)</visible>
					</control>
					<control type="image">
						<left>440</left>
						<top>-240</top>
						<right>10</right>
						<height>350</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordersize>20</bordersize>
					</control>
					<control type="textbox">
						<left>483</left>
						<top>-165</top>
						<right>54</right>
						<height>245</height>
						<label fallback="19055">$INFO[VideoPlayer.Tagline,[B],[/B][CR]]$INFO[VideoPlayer.Plot]</label>
						<align>justify</align>
						<autoscroll delay="10000" repeat="7000" time="5000"></autoscroll>
						<visible>String.IsEmpty(VideoPlayer.Genre)</visible>
					</control>
					<control type="label">
						<left>483</left>
						<top>-212</top>
						<right>54</right>
						<height>30</height>
						<label>[B]$INFO[VideoPlayer.Artist,, [COLOR white]-[/COLOR] ]$INFO[VideoPlayer.Album,, [COLOR white]-[/COLOR] ]$INFO[VideoPlayer.TVShowTitle,, [COLOR white]-[/COLOR] ]$INFO[VideoPlayer.Season,$LOCALIZE[20373] , [COLOR white]-[/COLOR] ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] , [COLOR white]-[/COLOR] ]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, (,)][/B]</label>
						<scroll>true</scroll>
						<textcolor>$VAR[SkinColorVar]</textcolor>
					</control>
					<control type="textbox">
						<left>483</left>
						<top>-165</top>
						<right>54</right>
						<height>214</height>
						<label fallback="19055">$INFO[VideoPlayer.Tagline,[B],[/B][CR]]$INFO[VideoPlayer.Plot]</label>
						<align>justify</align>
						<autoscroll delay="10000" repeat="7000" time="5000"></autoscroll>
						<visible>!String.IsEmpty(VideoPlayer.Genre)</visible>
					</control>
					<control type="label">
						<left>483</left>
						<top>48</top>
						<right>54</right>
						<height>30</height>
						<label>$INFO[VideoPlayer.Genre]</label>
						<align>right</align>
						<font>font12</font>
						<scroll>true</scroll>
						<textcolor>$VAR[SkinColorVar]</textcolor>
						<autoscroll delay="5000" repeat="7500" time="5000"></autoscroll>
					</control>
				</control>
			</control>
			<control type="group">
				<left>483</left>
				<top>-260</top>
				<width>1000</width>
				<height>100</height>
				<visible>!VideoPlayer.HasMenu</visible>
				<include>OpenClose_Right</include>
				<control type="image">
					<left>-23</left>
					<top>-10</top>
					<width>677</width>
					<height>50</height>
					<texture diffuse="dialogs/language-back1.png">dialogs/dialog-bg-nobo.png</texture>
					<visible>![String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)]</visible>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					<visible>![String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web) | String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)]</visible>
				</control>
				<control type="image">
					<left>-23</left>
					<top>-10</top>
					<width>740</width>
					<height>50</height>
					<texture diffuse="dialogs/language-back2.png">dialogs/dialog-bg-nobo.png</texture>
					<visible>![String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)]</visible>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					<visible>String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web) | String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)</visible>
				</control>
				<control type="image">
					<left>-23</left>
					<top>-10</top>
					<width>802</width>
					<height>50</height>
					<texture diffuse="dialogs/language-back3.png">dialogs/dialog-bg-nobo.png</texture>
					<visible>![String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)]</visible>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage) + !String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					<visible>![String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web) | String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)]</visible>
				</control>
				<control type="image">
					<left>-23</left>
					<top>-10</top>
					<width>865</width>
					<height>50</height>
					<texture diffuse="dialogs/language-back4.png">dialogs/dialog-bg-nobo.png</texture>
					<visible>![String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)]</visible>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage) + !String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					<visible>String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web) | String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)</visible>
				</control>
				<control type="image">
					<left>-23</left>
					<top>-10</top>
					<width>567</width>
					<height>50</height>
					<texture diffuse="dialogs/language-back5.png">dialogs/dialog-bg-nobo.png</texture>
					<visible>String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					<visible>![String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web) | String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)]</visible>
				</control>
				<control type="image">
					<left>-23</left>
					<top>-10</top>
					<width>630</width>
					<height>50</height>
					<texture diffuse="dialogs/language-back6.png">dialogs/dialog-bg-nobo.png</texture>
					<visible>String.IsEmpty(VideoPlayer.AudioLanguage) + String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
					<visible>String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web) | String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)</visible>
				</control>
			</control>
			<control type="grouplist">
				<left>483</left>
				<top>-266</top>
				<width>1000</width>
				<height>50</height>
				<align>left</align>
				<include>OpenClose_Right</include>
				<orientation>horizontal</orientation>
				<itemgap>5</itemgap>
				<visible>!Player.ChannelPreviewActive</visible>
				<include content="MediaFlagOSD">
					<param name="texture" value="flags/webdl.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains(Player.Filenameandpath,WEB-DL) | String.Contains(Player.Filenameandpath,WEBDL) | String.Contains(Player.Filenameandpath,WEB) | String.Contains(Player.Filenameandpath,web-dl) | String.Contains(Player.Filenameandpath,webdl) | String.Contains(Player.Filenameandpath,web)" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="flags/dvd.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains(Player.Filenameandpath,DVD) | String.Contains(Player.Filenameandpath,dvd)" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="flags/bluray.png" />
					<param name="width" value="58" />
					<param name="visible" value="String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,BLURAY) | String.Contains(Player.Filenameandpath,BLU-RAY) | String.Contains(Player.Filenameandpath,BDRIP)" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$VAR[VideoPlayerResolutionFlagVar]" />
					<param name="fallback" value="flags/videoresolution/fallback.png" />
					<param name="width" value="58" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.VideoCodec,flags/videocodec/,.png]" />
					<param name="fallback" value="flags/videocodec/fallback.png" />
					<param name="width" value="104" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]" />
					<param name="fallback" value="flags/aspectratio/fallback.png" />
					<param name="width" value="86" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$VAR[VideoPlayerAudioCodecFlagVar]" />
					<param name="fallback" value="flags/audiocodec/fallback.png" />
					<param name="width" value="104" />
				</include>
				<include content="MediaFlagOSD">
					<param name="texture" value="$INFO[VideoPlayer.AudioChannels,flags/audiochannel/,.png]" />
					<param name="fallback" value="flags/audiochannel/fallback.png" />
					<param name="width" value="104" />
				</include>
				<include content="MediaFlagOSD">
					<param name="width" value="10" />
				</include>
				<control type="image">
					<width>40</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture>icons/infodialogs/audio.png</texture>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage)</visible>
				</control>
				<control type="image">
					<width>5</width>
					<height>10</height>
					<aspectratio>keep</aspectratio>
					<texture/>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage)</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture fallback="icons/infodialogs/flags/fallback.png">$INFO[VideoPlayer.AudioLanguage,icons/infodialogs/flags/,.png]</texture>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage)</visible>
				</control>
				<control type="image">
					<width>20</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture/>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage) + !String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture>icons/infodialogs/subtitles.png</texture>
					<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
				<control type="image">
					<width>5</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture/>
					<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture fallback="icons/infodialogs/flags/fallback.png">$INFO[VideoPlayer.SubtitlesLanguage,icons/infodialogs/flags/,.png]</texture>
					<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
			</control>
			<control type="grouplist">
				<left>-450</left>
				<top>160</top>
				<width>1000</width>
				<height>100</height>
				<align>right</align>
				<include>Animation_BottomSlide</include>
				<orientation>horizontal</orientation>
				<itemgap>5</itemgap>
				<visible>![Player.ChannelPreviewActive | Window.IsActive(videoosd)]</visible>
				<visible>VideoPlayer.HasMenu</visible>
				<control type="image">
					<width>40</width>
					<height>40</height>
					<aspectratio>keep</aspectratio>
					<texture>icons/infodialogs/audio.png</texture>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage))</visible>
				</control>
				<control type="image">
					<width>5</width>
					<height>10</height>
					<aspectratio>keep</aspectratio>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage))</visible>
					<texture/>
				</control>
				<control type="image">
					<width>40</width>
					<height>40</height>
					<aspectratio>keep</aspectratio>
					<texture fallback="icons/infodialogs/flags/fallback.png">$INFO[VideoPlayer.AudioLanguage,icons/infodialogs/flags/,.png]</texture>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage))</visible>
				</control>
				<control type="image">
					<width>30</width>
					<height>10</height>
					<aspectratio>keep</aspectratio>
					<texture/>
					<visible>!String.IsEmpty(VideoPlayer.AudioLanguage) + !String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>40</height>
					<aspectratio>keep</aspectratio>
					<texture>icons/infodialogs/subtitles.png</texture>
					<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
				<control type="image">
					<width>5</width>
					<height>10</height>
					<aspectratio>keep</aspectratio>
					<texture/>
					<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>40</height>
					<aspectratio>keep</aspectratio>
					<texture fallback="icons/infodialogs/flags/fallback.png">$INFO[VideoPlayer.SubtitlesLanguage,icons/infodialogs/flags/,.png]</texture>
					<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				</control>
			</control>
		</control>
	</controls>
</window>